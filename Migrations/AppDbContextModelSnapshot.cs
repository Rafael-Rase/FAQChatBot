// <auto-generated />
using System;
using FAQChatBot.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;



namespace FAQChatBot.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FAQChatBot.Models.Aluno", b =>
                {
                    b.Property<int>("Id_Aluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Aluno"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id_Aluno");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("FAQChatBot.Models.Categoria", b =>
                {
                    b.Property<int>("Id_Categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Categoria"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Categoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("FAQChatBot.Models.ChatBot", b =>
                {
                    b.Property<int>("Id_ChatBot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_ChatBot"));

                    b.Property<bool>("Permite_Digitar")
                        .HasColumnType("bit");

                    b.Property<string>("Texto_Pergunta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_ChatBot");

                    b.ToTable("ChatBots");
                });

            modelBuilder.Entity("FAQChatBot.Models.Conversa", b =>
                {
                    b.Property<int>("Id_Conversa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Conversa"));

                    b.Property<DateTime>("Data_Fim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_Inicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Aluno")
                        .HasColumnType("int");

                    b.Property<bool>("Resolvida")
                        .HasColumnType("bit");

                    b.HasKey("Id_Conversa");

                    b.HasIndex("Id_Aluno");

                    b.ToTable("Conversas");
                });

            modelBuilder.Entity("FAQChatBot.Models.Feedback", b =>
                {
                    b.Property<int>("Id_Feedback")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Feedback"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Conversa")
                        .HasColumnType("int");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.HasKey("Id_Feedback");

                    b.HasIndex("Id_Conversa");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("FAQChatBot.Models.OpcoesChatBot", b =>
                {
                    b.Property<int>("Id_Opcao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Opcao"));

                    b.Property<bool>("Gera_Email")
                        .HasColumnType("bit");

                    b.Property<int>("Id_ChatBot")
                        .HasColumnType("int");

                    b.Property<string>("Texto_Opcao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Opcao");

                    b.HasIndex("Id_ChatBot");

                    b.ToTable("OpcoesChatBots");
                });

            modelBuilder.Entity("FAQChatBot.Models.Pergunta", b =>
                {
                    b.Property<int>("Id_Pergunta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Pergunta"));

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Texto_Pergunta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Pergunta");

                    b.HasIndex("Id_Categoria");

                    b.ToTable("Perguntas");
                });

            modelBuilder.Entity("FAQChatBot.Models.Conversa", b =>
                {
                    b.HasOne("FAQChatBot.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("Id_Aluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("FAQChatBot.Models.Feedback", b =>
                {
                    b.HasOne("FAQChatBot.Models.Conversa", "Conversa")
                        .WithMany()
                        .HasForeignKey("Id_Conversa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversa");
                });

            modelBuilder.Entity("FAQChatBot.Models.OpcoesChatBot", b =>
                {
                    b.HasOne("FAQChatBot.Models.ChatBot", "ChatBot")
                        .WithMany()
                        .HasForeignKey("Id_ChatBot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatBot");
                });

            modelBuilder.Entity("FAQChatBot.Models.Pergunta", b =>
                {
                    b.HasOne("FAQChatBot.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("Id_Categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
